{"ast":null,"code":"import { apiCall } from \"../../services/api\";\nimport { LOAD_PROJECTS } from \"../actionTypes\"; //api call syntax apiCall(method, path, payload)\n\nfunction loadProjects(projects) {\n  return {\n    type: LOAD_PROJECTS,\n    projects\n  };\n}\n\nexport function getProjects() {\n  return dispatch => {\n    apiCall(\"get\", \"/api/projects\").then(res => {\n      dispatch(loadProjects(res));\n    }).catch(err => console.log(err));\n  };\n}\nexport function postProject(projectData) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n    apiCall(\"post\", `api/users/${id}/projects`, projectData).then(res => dispatch());\n  };\n}","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/store/actions/projectActions.js"],"names":["apiCall","LOAD_PROJECTS","loadProjects","projects","type","getProjects","dispatch","then","res","catch","err","console","log","postProject","projectData","getState","currentUser","id","user"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B,C,CAEA;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEH,aADH;AAEHE,IAAAA;AAFG,GAAP;AAIH;;AAED,OAAO,SAASE,WAAT,GAAuB;AAC1B,SAAOC,QAAQ,IAAI;AACfN,IAAAA,OAAO,CAAC,KAAD,EAAQ,eAAR,CAAP,CACCO,IADD,CACMC,GAAG,IAAI;AACTF,MAAAA,QAAQ,CAACJ,YAAY,CAACM,GAAD,CAAb,CAAR;AACH,KAHD,EAICC,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;AAKH,GAND;AAOH;AAED,OAAO,SAASG,WAAT,CAAqBC,WAArB,EAAkC;AACrC,SAAO,CAACR,QAAD,EAAWS,QAAX,KAAwB;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,QAAQ,EAAhC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAASD,WAAW,CAACE,IAA3B;AACAlB,IAAAA,OAAO,CAAC,MAAD,EAAU,aAAYiB,EAAG,WAAzB,EAAqCH,WAArC,CAAP,CACKP,IADL,CACWC,GAAD,IAASF,QAAQ,EAD3B;AAGH,GAND;AAOH","sourcesContent":["import { apiCall } from \"../../services/api\";\nimport { LOAD_PROJECTS } from \"../actionTypes\";\n\n//api call syntax apiCall(method, path, payload)\n\nfunction loadProjects(projects) {\n    return {\n        type: LOAD_PROJECTS,\n        projects\n    }\n}\n\nexport function getProjects() {\n    return dispatch => {\n        apiCall(\"get\", \"/api/projects\")\n        .then(res => {\n            dispatch(loadProjects(res))\n        })\n        .catch(err => console.log(err))\n    }\n}\n\nexport function postProject(projectData) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user\n        apiCall(\"post\", `api/users/${id}/projects`, projectData)\n            .then((res) => dispatch())\n\n    }\n}"]},"metadata":{},"sourceType":"module"}