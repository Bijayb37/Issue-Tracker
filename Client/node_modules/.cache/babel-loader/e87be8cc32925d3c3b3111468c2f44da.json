{"ast":null,"code":"var _jsxFileName = \"/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/containers/App.js\";\nimport React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Main from '../components/Main';\nimport AuthForm from '../components/AuthForm';\nimport Test from '../components/Test';\nimport ProjectPage from '../components/ProjectPage';\nimport AllProjects from '../containers/AllProjects';\nimport MyProfile from '../components/MyProfile';\nimport AllIssues from './AllIssues';\nimport { connect } from 'react-redux';\nimport { authUser } from '../store/actions/currentUserActions';\nimport { getProjects } from '../store/actions/projectActions';\nimport { getIssues } from '../store/actions/issueActions';\nimport \"../App.css\";\n\nfunction App(props) {\n  const {\n    currentUser,\n    errors,\n    authUser,\n    getProjects,\n    projects,\n    issues,\n    getIssues\n  } = props;\n  useEffect(() => {\n    getProjects();\n    getIssues();\n  }, [getProjects, getIssues]);\n\n  const findProject = projectId => {\n    return projects.find(project => project._id === projectId);\n  };\n\n  const filterMyProjects = userId => {\n    return projects.filter(project => project.createdBy._id === userId);\n  };\n\n  const filterMyIssues = userId => {\n    return issues.filter(issue => issue.user._id === userId);\n  };\n\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: routeProps => /*#__PURE__*/React.createElement(Main, Object.assign({}, routeProps, {\n      currentUser: currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 53\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: routeProps => /*#__PURE__*/React.createElement(AuthForm, Object.assign({\n      errors: errors,\n      authUser: authUser\n    }, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    render: routeProps => /*#__PURE__*/React.createElement(AuthForm, Object.assign({\n      authUser: authUser,\n      errors: errors,\n      signup: true\n    }, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/test\",\n    render: () => /*#__PURE__*/React.createElement(Test, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/projects/:projectId\",\n    render: routeProps => /*#__PURE__*/React.createElement(ProjectPage, Object.assign({\n      projects: projects,\n      project: findProject(routeProps.match.params.projectId)\n    }, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/projects\",\n    render: routeProps => /*#__PURE__*/React.createElement(AllProjects, Object.assign({\n      currentUser: currentUser\n    }, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `/:userId/profile`,\n    render: routeProps => /*#__PURE__*/React.createElement(MyProfile, Object.assign({\n      currentUser: currentUser,\n      projects: filterMyProjects(currentUser.user.id)\n    }, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `/:userId/issues`,\n    render: routeProps => /*#__PURE__*/React.createElement(AllIssues, Object.assign({\n      projects: projects,\n      currentUser: currentUser\n    }, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    errors: state.errors,\n    projects: state.projects,\n    issues: state.issues\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authUser,\n  getProjects,\n  getIssues\n})(App);","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/containers/App.js"],"names":["React","useEffect","Route","Switch","Main","AuthForm","Test","ProjectPage","AllProjects","MyProfile","AllIssues","connect","authUser","getProjects","getIssues","App","props","currentUser","errors","projects","issues","findProject","projectId","find","project","_id","filterMyProjects","userId","filter","createdBy","filterMyIssues","issue","user","routeProps","match","params","id","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Main from '../components/Main'\nimport AuthForm from '../components/AuthForm'\nimport Test from '../components/Test'\nimport ProjectPage from '../components/ProjectPage'\nimport AllProjects from '../containers/AllProjects'\nimport MyProfile from '../components/MyProfile'\nimport AllIssues from './AllIssues'\nimport { connect } from 'react-redux';\nimport { authUser } from '../store/actions/currentUserActions';\nimport { getProjects } from '../store/actions/projectActions'\nimport { getIssues } from '../store/actions/issueActions'\nimport \"../App.css\"\n\nfunction App(props) {\n  const { currentUser, errors, authUser, getProjects, projects, issues, getIssues } = props\n  \n  useEffect(() => {\n    getProjects()\n    getIssues()\n  }, [getProjects, getIssues])\n  \n  const findProject = (projectId) => {\n    return projects.find(project => project._id === projectId)\n  }\n\n  const filterMyProjects = (userId) => {\n    return projects.filter(project => project.createdBy._id === userId)\n  }\n\n  const filterMyIssues = (userId) => {\n    return issues.filter(issue => issue.user._id === userId)\n  }\n\n  return (\n      <Switch>\n        <Route exact path=\"/\" render={routeProps => <Main {...routeProps} currentUser={currentUser} />} />\n        <Route exact path=\"/login\"\n          render={routeProps =>\n            <AuthForm\n              errors={errors}\n              authUser={authUser}\n              {...routeProps}\n            />\n          }\n        />\n        <Route exact path=\"/signup\"\n          render={routeProps =>\n            <AuthForm\n              authUser={authUser}\n              errors={errors}\n              signup\n              {...routeProps}\n            />\n          }\n        />\n        <Route exact path=\"/test\" render={() => <Test />} />\n        <Route exact path=\"/projects/:projectId\"\n          render={(routeProps) =>\n            <ProjectPage\n              projects={projects}\n              project={findProject(routeProps.match.params.projectId)}\n              {...routeProps}\n            />\n          } />\n        <Route exact path=\"/projects\"\n          render={(routeProps) =>\n            <AllProjects\n              currentUser={currentUser}\n              {...routeProps}\n            />\n          } />\n        <Route exact path={`/:userId/profile`}\n          render={(routeProps) =>\n            <MyProfile\n              currentUser={currentUser}\n              projects={filterMyProjects(currentUser.user.id)}\n              {...routeProps}\n            />\n          } />\n        <Route exact path={`/:userId/issues`}\n          render={(routeProps) =>\n            <AllIssues\n              projects={projects}\n              currentUser={currentUser}\n              {...routeProps}\n            />\n          } />\n      </Switch>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    errors: state.errors,\n    projects: state.projects,\n    issues: state.issues,\n  }\n}\n\nexport default connect(mapStateToProps, { authUser, getProjects, getIssues })(App);\n"]},"metadata":{},"sourceType":"module"}