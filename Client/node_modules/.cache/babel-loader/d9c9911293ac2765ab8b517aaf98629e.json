{"ast":null,"code":"import { apiCall } from \"../../services/api\";\nimport { LOAD_ISSUES, REMOVE_ISSUES, UPDATE_PROJECTS } from \"../actionTypes\";\nimport { addError, removeError } from './errorActions'; //api call syntax apiCall(method, path, payload)\n\nfunction loadIssues(issues) {\n  return {\n    type: LOAD_ISSUES,\n    issues\n  };\n}\n\nfunction updateIssue(id, newIssue) {\n  return {\n    type: UPDATE_PROJECTS,\n    id,\n    issue: newIssue\n  };\n}\n\nfunction removeIssue(id) {\n  return {\n    type: REMOVE_ISSUES,\n    id\n  };\n}\n\nexport function getIssues() {\n  return dispatch => {\n    apiCall(\"get\", \"/api/issues\").then(res => {\n      dispatch(loadIssues(res));\n    });\n  };\n}\nexport function postIssue(issueData) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n    apiCall(\"post\", `/api/users/${id}/issues`, issueData).then(res => dispatch(removeError())).catch(err => dispatch(addError(err.message)));\n  };\n}\nexport function editIssue(issueId, issueData) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n    apiCall(\"patch\", `/api/users/${id}/issues/${issueId}`, issueData).then(res => {\n      dispatch(removeError());\n      dispatch(updateIssue(res.issue._id, res.issue));\n    }).catch(err => dispatch(addError(err.message)));\n  };\n}\nexport function deleteIssue(issueId) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n    apiCall(\"delete\", `/api/users/${id}/issues/${issueId}`).then(res => dispatch(removeIssue(res.issue._id))).catch(err => console.log(err.message));\n  };\n}","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/store/actions/issueActions.js"],"names":["apiCall","LOAD_ISSUES","REMOVE_ISSUES","UPDATE_PROJECTS","addError","removeError","loadIssues","issues","type","updateIssue","id","newIssue","issue","removeIssue","getIssues","dispatch","then","res","postIssue","issueData","getState","currentUser","user","catch","err","message","editIssue","issueId","_id","deleteIssue","console","log"],"mappings":"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","sourcesContent":["import { apiCall } from \"../../services/api\";\nimport { LOAD_ISSUES, REMOVE_ISSUES, UPDATE_PROJECTS } from \"../actionTypes\";\nimport { addError, removeError } from './errorActions'\n\n//api call syntax apiCall(method, path, payload)\nfunction loadIssues(issues) {\n    return {\n        type: LOAD_ISSUES,\n        issues\n    }\n}\n\nfunction updateIssue(id, newIssue) {\n    return {\n        type: UPDATE_PROJECTS,\n        id,\n        issue: newIssue\n    }\n}\n\nfunction removeIssue(id) {\n    return {\n        type: REMOVE_ISSUES,\n        id\n    }\n}\n\nexport function getIssues() {\n    return dispatch => {\n        apiCall(\"get\", \"/api/issues\")\n        .then(res => {\n            dispatch(loadIssues(res))\n        })\n    }\n}\n\nexport function postIssue(issueData) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user\n        apiCall(\"post\", `/api/users/${id}/issues`, issueData)\n        .then(res => dispatch(removeError()))\n        .catch(err => dispatch(addError(err.message)))\n    }\n}\n\nexport function editIssue(issueId, issueData) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user\n        apiCall(\"patch\", `/api/users/${id}/issues/${issueId}`, issueData)\n        .then(res => {\n            dispatch(removeError())\n            dispatch(updateIssue(res.issue._id, res.issue))\n        })\n        .catch(err => dispatch(addError(err.message)))\n    }\n}\n\nexport function deleteIssue(issueId) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user \n        apiCall(\"delete\", `/api/users/${id}/issues/${issueId}`)\n        .then(res => dispatch(removeIssue(res.issue._id)))\n        .catch(err => console.log(err.message))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}