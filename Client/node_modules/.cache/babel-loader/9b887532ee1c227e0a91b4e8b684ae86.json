{"ast":null,"code":"import { apiCall } from \"../../services/api\";\nimport { ADD_ISSUE, LOAD_ISSUES, REMOVE_ISSUES, UPDATE_ISSUES } from \"../actionTypes\";\nimport { addError, removeError } from './errorActions';\nimport axios from 'axios'; //api call syntax apiCall(method, path, payload)\n\nfunction loadIssues(issues) {\n  return {\n    type: LOAD_ISSUES,\n    issues\n  };\n}\n\nfunction updateIssue(id, newIssue) {\n  return {\n    type: UPDATE_ISSUES,\n    id,\n    issue: newIssue\n  };\n}\n\nfunction removeIssue(id) {\n  return {\n    type: REMOVE_ISSUES,\n    id\n  };\n}\n\nfunction addIssue(issue) {\n  return {\n    type: ADD_ISSUE,\n    issue\n  };\n}\n\nexport function getIssues() {\n  return dispatch => {\n    apiCall(\"get\", \"/api/issues\").then(res => {\n      dispatch(loadIssues(res));\n    });\n  };\n}\nexport function postIssue(issueData) {\n  return async (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n\n    try {\n      const res = await apiCall(\"post\", `/api/users/${id}/issues`, issueData);\n      dispatch(removeError());\n      dispatch(addIssue(res));\n      return \"sucess\";\n    } catch (err) {\n      dispatch(addError(err.message));\n      return err;\n    }\n  };\n}\nexport function editIssue(issueId, issueData) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n    apiCall(\"patch\", `/api/users/${id}/issues/${issueId}`, issueData).then(res => {\n      dispatch(removeError());\n      dispatch(updateIssue(res.issue._id, res.issue));\n    }).catch(err => {\n      dispatch(addError(err.message));\n    });\n  };\n}\nexport function deleteIssue(issueId) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n    apiCall(\"delete\", `/api/users/${id}/issues/${issueId}`).then(res => dispatch(removeIssue(res.issue._id))).catch(err => console.log(err.message));\n  };\n}","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/store/actions/issueActions.js"],"names":["apiCall","ADD_ISSUE","LOAD_ISSUES","REMOVE_ISSUES","UPDATE_ISSUES","addError","removeError","axios","loadIssues","issues","type","updateIssue","id","newIssue","issue","removeIssue","addIssue","getIssues","dispatch","then","res","postIssue","issueData","getState","currentUser","user","err","message","editIssue","issueId","_id","catch","deleteIssue","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,aAAjC,EAAgDC,aAAhD,QAAqE,gBAArE;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAER,WADH;AAEHO,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,WAAT,CAAqBC,EAArB,EAAyBC,QAAzB,EAAmC;AAC/B,SAAO;AACHH,IAAAA,IAAI,EAAEN,aADH;AAEHQ,IAAAA,EAFG;AAGHE,IAAAA,KAAK,EAAED;AAHJ,GAAP;AAKH;;AAED,SAASE,WAAT,CAAqBH,EAArB,EAAyB;AACrB,SAAO;AACHF,IAAAA,IAAI,EAAEP,aADH;AAEHS,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASI,QAAT,CAAkBF,KAAlB,EAAyB;AACrB,SAAO;AACHJ,IAAAA,IAAI,EAAET,SADH;AAEHa,IAAAA;AAFG,GAAP;AAIH;;AAED,OAAO,SAASG,SAAT,GAAqB;AACxB,SAAOC,QAAQ,IAAI;AACflB,IAAAA,OAAO,CAAC,KAAD,EAAQ,aAAR,CAAP,CACKmB,IADL,CACUC,GAAG,IAAI;AACTF,MAAAA,QAAQ,CAACV,UAAU,CAACY,GAAD,CAAX,CAAR;AACH,KAHL;AAIH,GALD;AAMH;AAED,OAAO,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AACjC,SAAO,OAAOJ,QAAP,EAAiBK,QAAjB,KAA8B;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,QAAQ,EAAhC;AACA,UAAM;AAAEX,MAAAA;AAAF,QAASY,WAAW,CAACC,IAA3B;;AACA,QAAI;AACA,YAAML,GAAG,GAAG,MAAMpB,OAAO,CAAC,MAAD,EAAU,cAAaY,EAAG,SAA1B,EAAoCU,SAApC,CAAzB;AACAJ,MAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACAY,MAAAA,QAAQ,CAACF,QAAQ,CAACI,GAAD,CAAT,CAAR;AACA,aAAO,QAAP;AACH,KALD,CAKE,OAAOM,GAAP,EAAY;AACVR,MAAAA,QAAQ,CAACb,QAAQ,CAACqB,GAAG,CAACC,OAAL,CAAT,CAAR;AACA,aAAOD,GAAP;AACH;AACJ,GAZD;AAaH;AAID,OAAO,SAASE,SAAT,CAAmBC,OAAnB,EAA4BP,SAA5B,EAAuC;AAC1C,SAAO,CAACJ,QAAD,EAAWK,QAAX,KAAwB;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,QAAQ,EAAhC;AACA,UAAM;AAAEX,MAAAA;AAAF,QAASY,WAAW,CAACC,IAA3B;AACAzB,IAAAA,OAAO,CAAC,OAAD,EAAW,cAAaY,EAAG,WAAUiB,OAAQ,EAA7C,EAAgDP,SAAhD,CAAP,CACKH,IADL,CACUC,GAAG,IAAI;AACTF,MAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACAY,MAAAA,QAAQ,CAACP,WAAW,CAACS,GAAG,CAACN,KAAJ,CAAUgB,GAAX,EAAgBV,GAAG,CAACN,KAApB,CAAZ,CAAR;AAEH,KALL,EAMKiB,KANL,CAMWL,GAAG,IAAI;AACVR,MAAAA,QAAQ,CAACb,QAAQ,CAACqB,GAAG,CAACC,OAAL,CAAT,CAAR;AACH,KARL;AASH,GAZD;AAaH;AAED,OAAO,SAASK,WAAT,CAAqBH,OAArB,EAA8B;AACjC,SAAO,CAACX,QAAD,EAAWK,QAAX,KAAwB;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,QAAQ,EAAhC;AACA,UAAM;AAAEX,MAAAA;AAAF,QAASY,WAAW,CAACC,IAA3B;AACAzB,IAAAA,OAAO,CAAC,QAAD,EAAY,cAAaY,EAAG,WAAUiB,OAAQ,EAA9C,CAAP,CACKV,IADL,CACUC,GAAG,IAAIF,QAAQ,CAACH,WAAW,CAACK,GAAG,CAACN,KAAJ,CAAUgB,GAAX,CAAZ,CADzB,EAEKC,KAFL,CAEWL,GAAG,IAAIO,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACC,OAAhB,CAFlB;AAGH,GAND;AAOH","sourcesContent":["import { apiCall } from \"../../services/api\";\nimport { ADD_ISSUE, LOAD_ISSUES, REMOVE_ISSUES, UPDATE_ISSUES } from \"../actionTypes\";\nimport { addError, removeError } from './errorActions'\nimport axios from 'axios'\n\n//api call syntax apiCall(method, path, payload)\nfunction loadIssues(issues) {\n    return {\n        type: LOAD_ISSUES,\n        issues\n    }\n}\n\nfunction updateIssue(id, newIssue) {\n    return {\n        type: UPDATE_ISSUES,\n        id,\n        issue: newIssue\n    }\n}\n\nfunction removeIssue(id) {\n    return {\n        type: REMOVE_ISSUES,\n        id\n    }\n}\n\nfunction addIssue(issue) {\n    return {\n        type: ADD_ISSUE,\n        issue\n    }\n}\n\nexport function getIssues() {\n    return dispatch => {\n        apiCall(\"get\", \"/api/issues\")\n            .then(res => {\n                dispatch(loadIssues(res))\n            })\n    }\n}\n\nexport function postIssue(issueData) {\n    return async (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user\n        try {\n            const res = await apiCall(\"post\", `/api/users/${id}/issues`, issueData)\n            dispatch(removeError())\n            dispatch(addIssue(res))\n            return \"sucess\"\n        } catch (err) {\n            dispatch(addError(err.message))\n            return err\n        }\n    }\n}\n\n\n\nexport function editIssue(issueId, issueData) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user\n        apiCall(\"patch\", `/api/users/${id}/issues/${issueId}`, issueData)\n            .then(res => {\n                dispatch(removeError())\n                dispatch(updateIssue(res.issue._id, res.issue))\n\n            })\n            .catch(err => {\n                dispatch(addError(err.message))\n            })\n    }\n}\n\nexport function deleteIssue(issueId) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user\n        apiCall(\"delete\", `/api/users/${id}/issues/${issueId}`)\n            .then(res => dispatch(removeIssue(res.issue._id)))\n            .catch(err => console.log(err.message))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}