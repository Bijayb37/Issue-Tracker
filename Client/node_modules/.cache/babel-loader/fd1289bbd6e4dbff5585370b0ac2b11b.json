{"ast":null,"code":"var _jsxFileName = \"/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/containers/AllProjects.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getProjects, postProject, patchProject, deleteProject } from '../store/actions/projectActions';\nimport '../styles/allProjects.css';\nimport ProjectForm from '../components/ProjectForm';\nimport ProjectItem from '../components/ProjectItem';\nimport { removeError } from '../store/actions/errorActions';\nimport Table from 'react-bootstrap/Table';\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction AllProjects({\n  projects,\n  users,\n  errors,\n  removeError,\n  postProject,\n  history,\n  patchProject,\n  deleteProject\n}) {\n  const [edit, setEdit] = useState(false);\n  const [projectId, setProjectId] = useState(\"\");\n  const [show, setShow] = useState({\n    createModal: false,\n    removeModal: false\n  });\n  let projectsMap = projects.map((project, i) => /*#__PURE__*/React.createElement(ProjectItem, {\n    key: i,\n    setProjectId: setProjectId,\n    setEdit: setEdit,\n    index: i + 1,\n    history: history,\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n  history.listen(() => {\n    removeError();\n  });\n  const projectDetails = projects.find(project => project._id === projectId);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allProjectsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setEdit(false);\n      setShow(prev => ({ ...prev,\n        createModal: true\n      }));\n    },\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-bs-toggle\": \"modal\",\n    \"data-bs-target\": \"#projectModal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mappedProjects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"Start Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, projectsMap))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projectForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProjectForm, {\n    edit: edit,\n    postProject: postProject,\n    patchProject: patchProject,\n    projectId: projectId,\n    users: users,\n    errors: errors,\n    project: projectDetails,\n    setProjectId: setProjectId,\n    show: show.createModal,\n    setShow: setShow,\n    removeError: removeError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show.removeModal,\n    onHide: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Woohoo, you're reading this text in a modal!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    errors: state.errors,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProjects,\n  postProject,\n  patchProject,\n  deleteProject,\n  removeError\n})(AllProjects);","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/containers/AllProjects.js"],"names":["React","useState","connect","getProjects","postProject","patchProject","deleteProject","ProjectForm","ProjectItem","removeError","Table","Modal","AllProjects","projects","users","errors","history","edit","setEdit","projectId","setProjectId","show","setShow","createModal","removeModal","projectsMap","map","project","i","listen","projectDetails","find","_id","prev","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { getProjects, postProject, patchProject, deleteProject } from '../store/actions/projectActions'\nimport '../styles/allProjects.css'\nimport ProjectForm from '../components/ProjectForm'\nimport ProjectItem from '../components/ProjectItem'\nimport { removeError } from '../store/actions/errorActions'\nimport Table from 'react-bootstrap/Table'\nimport Modal from \"react-bootstrap/Modal\"\n\nfunction AllProjects({ projects, users, errors, removeError, postProject, history, patchProject, deleteProject }) {\n    const [edit, setEdit] = useState(false)\n    const [projectId, setProjectId] = useState(\"\")\n    const [show, setShow] = useState({\n        createModal: false,\n        removeModal: false\n    });\n\n    let projectsMap = projects.map((project, i) =>\n        <ProjectItem\n            key={i}\n            setProjectId={setProjectId}\n            setEdit={setEdit}\n            index={i + 1}\n            history={history}\n            project={project}\n        />)\n\n    history.listen(() => {\n        removeError()\n    })\n\n    const projectDetails = projects.find(project => project._id === projectId)\n\n    return (\n        <div className=\"allProjectsContainer\">\n            <h1 className=\"display-6\">Projects</h1>\n            <button onClick={() => { setEdit(false); setShow(prev => ({ ...prev, createModal: true})) }} type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#projectModal\">\n                Create\n            </button>\n            <div className=\"mappedProjects\">\n                <Table hover>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Title</th>\n                            <th scope=\"col\">Start Date</th>\n                            <th scope=\"col\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {projectsMap}\n                    </tbody>\n                </Table>\n            </div>\n            <div className=\"projectForm\">\n                <ProjectForm\n                    edit={edit}\n                    postProject={postProject}\n                    patchProject={patchProject}\n                    projectId={projectId}\n                    users={users}\n                    errors={errors}\n                    project={projectDetails}\n                    setProjectId={setProjectId}\n                    show={show.createModal}\n                    setShow={setShow}\n                    removeError={removeError}\n                />\n            </div>\n            <Modal show={show.removeModal} onHide={() => setShow(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    {/* <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.projects,\n        errors: state.errors,\n        users: state.users,\n    }\n}\n\nexport default connect(mapStateToProps, { getProjects, postProject, patchProject, deleteProject, removeError })(AllProjects)"]},"metadata":{},"sourceType":"module"}