{"ast":null,"code":"import { apiCall } from \"../../services/api\";\nimport { LOAD_PROJECTS } from \"../actionTypes\";\nimport { addError } from './errorActions'; //api call syntax apiCall(method, path, payload)\n\nfunction loadProjects(projects) {\n  return {\n    type: LOAD_PROJECTS,\n    projects\n  };\n}\n\nexport function getProjects() {\n  return dispatch => {\n    apiCall(\"get\", \"/api/projects\").then(res => dispatch(loadProjects(res))).catch(err => dispatch(addError(err.message)));\n  };\n}\nexport function postProject(projectData) {\n  return new Promise((resolve, reject) => {\n    return (dispatch, getState) => {\n      const {\n        currentUser\n      } = getState();\n      const {\n        id\n      } = currentUser.user;\n      apiCall(\"post\", `api/users/${id}/projects`, projectData).then(res => {}).catch(err => dispatch(addError(err.message)));\n    };\n  });\n}\nexport function editProject(projectId, projectData) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser;\n    apiCall(\"patch\", `/api/users/${id}/projects/${projectId}`, projectData).then(res => {}).catch(err => dispatch(addError(err.message)));\n  };\n}\nexport function removeProject(projectId) {\n  return (dispatch, getState) => {\n    const {\n      currentUser\n    } = getState();\n    const {\n      id\n    } = currentUser.user;\n    apiCall(\"delete\", `/api/users/${id}/projects/${projectId}`).then(res => {}).catch(err => {\n      console.log(err);\n      dispatch(addError(err.message));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/bijaybohora/Documents/100 days/IssueTracker/Client/src/store/actions/projectActions.js"],"names":["apiCall","LOAD_PROJECTS","addError","loadProjects","projects","type","getProjects","dispatch","then","res","catch","err","message","postProject","projectData","Promise","resolve","reject","getState","currentUser","id","user","editProject","projectId","removeProject","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CACA;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,aADH;AAEHG,IAAAA;AAFG,GAAP;AAIH;;AAED,OAAO,SAASE,WAAT,GAAuB;AAC1B,SAAOC,QAAQ,IAAI;AACfP,IAAAA,OAAO,CAAC,KAAD,EAAQ,eAAR,CAAP,CACKQ,IADL,CACUC,GAAG,IAAIF,QAAQ,CAACJ,YAAY,CAACM,GAAD,CAAb,CADzB,EAEKC,KAFL,CAEWC,GAAG,IAAIJ,QAAQ,CAACL,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAT,CAF1B;AAGH,GAJD;AAKH;AAED,OAAO,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AACrC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAO,CAACV,QAAD,EAAWW,QAAX,KAAwB;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAkBD,QAAQ,EAAhC;AACA,YAAM;AAAEE,QAAAA;AAAF,UAASD,WAAW,CAACE,IAA3B;AACArB,MAAAA,OAAO,CAAC,MAAD,EAAU,aAAYoB,EAAG,WAAzB,EAAqCN,WAArC,CAAP,CACKN,IADL,CACUC,GAAG,IAAI,CAAG,CADpB,EAEKC,KAFL,CAEWC,GAAG,IAAIJ,QAAQ,CAACL,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAT,CAF1B;AAIH,KAPD;AAQH,GATM,CAAP;AAUH;AAED,OAAO,SAASU,WAAT,CAAqBC,SAArB,EAAgCT,WAAhC,EAA6C;AAChD,SAAO,CAACP,QAAD,EAAWW,QAAX,KAAwB;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,QAAQ,EAAhC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAASD,WAAf;AACAnB,IAAAA,OAAO,CAAC,OAAD,EAAW,cAAaoB,EAAG,aAAYG,SAAU,EAAjD,EAAoDT,WAApD,CAAP,CACKN,IADL,CACUC,GAAG,IAAI,CAAG,CADpB,EAEKC,KAFL,CAEWC,GAAG,IAAIJ,QAAQ,CAACL,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAT,CAF1B;AAGH,GAND;AAOH;AAED,OAAO,SAASY,aAAT,CAAuBD,SAAvB,EAAkC;AACrC,SAAO,CAAChB,QAAD,EAAWW,QAAX,KAAwB;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,QAAQ,EAAhC;AACA,UAAM;AAAEE,MAAAA;AAAF,QAASD,WAAW,CAACE,IAA3B;AACArB,IAAAA,OAAO,CAAC,QAAD,EAAY,cAAaoB,EAAG,aAAYG,SAAU,EAAlD,CAAP,CACKf,IADL,CACUC,GAAG,IAAI,CAAG,CADpB,EAEKC,KAFL,CAEWC,GAAG,IAAI;AACVc,MAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACAJ,MAAAA,QAAQ,CAACL,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAT,CAAR;AACH,KALL;AAMH,GATD;AAUH","sourcesContent":["import { apiCall } from \"../../services/api\";\nimport { LOAD_PROJECTS } from \"../actionTypes\";\nimport { addError } from './errorActions'\n//api call syntax apiCall(method, path, payload)\n\nfunction loadProjects(projects) {\n    return {\n        type: LOAD_PROJECTS,\n        projects\n    }\n}\n\nexport function getProjects() {\n    return dispatch => {\n        apiCall(\"get\", \"/api/projects\")\n            .then(res => dispatch(loadProjects(res)))\n            .catch(err => dispatch(addError(err.message)))\n    }\n}\n\nexport function postProject(projectData) {\n    return new Promise((resolve, reject) => {\n        return (dispatch, getState) => {\n            const { currentUser } = getState()\n            const { id } = currentUser.user\n            apiCall(\"post\", `api/users/${id}/projects`, projectData)\n                .then(res => { })\n                .catch(err => dispatch(addError(err.message)))\n\n        }\n    })\n}\n\nexport function editProject(projectId, projectData) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser\n        apiCall(\"patch\", `/api/users/${id}/projects/${projectId}`, projectData)\n            .then(res => { })\n            .catch(err => dispatch(addError(err.message)))\n    }\n}\n\nexport function removeProject(projectId) {\n    return (dispatch, getState) => {\n        const { currentUser } = getState()\n        const { id } = currentUser.user\n        apiCall(\"delete\", `/api/users/${id}/projects/${projectId}`)\n            .then(res => { })\n            .catch(err => {\n                console.log(err)\n                dispatch(addError(err.message))\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}